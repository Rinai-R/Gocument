<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c6054028-f375-43b9-9c07-5d269562e655" name="更改" comment="">
      <change afterPath="$PROJECT_DIR$/Server/Document/DataBase/DB/init.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Server/Document/DataBase/conf/DB/init.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Server/User/DataBase/DB/ElasticSearch/Sensitive.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Server/User/DataBase/DB/ElasticSearch/elasticsearch.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Server/User/DataBase/DB/MySQL/mysql.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Server/User/DataBase/DB/Redis/redis.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/Server/User/DataBase/conf/DB/db.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/6690a521-40f0-43bd-95e9-fb18a70f7cb4.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources/6690a521-40f0-43bd-95e9-fb18a70f7cb4.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/DB/ElasticSearch/Sensitive.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/DB/ElasticSearch/Sensitive.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/DB/ElasticSearch/elasticsearch.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/DB/ElasticSearch/elasticsearch.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/DB/MySQL/mysql.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/DB/MySQL/mysql.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/DB/Redis/redis.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/DB/Redis/redis.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/DB/init.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/User/DataBase/DB/init.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/Document/dao/Check.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/dao/Check.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/Document/dao/Create.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/dao/Create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/Document/dao/Delete.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/dao/Delete.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/Document/dao/Edit.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/dao/Edit.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/Document/dao/Get.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/dao/Get.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/Document/dao/Grant.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/dao/Grant.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/Document/dao/Search.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/dao/Search.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/Document/dao/utils.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/dao/utils.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/User/dao/Alter.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/User/DataBase/dao/Alter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/User/dao/LoginAndRegister.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/User/DataBase/dao/LoginAndRegister.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/User/dao/PersonalPage.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/User/DataBase/dao/PersonalPage.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/conf/DB/db.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/conf/DB/db.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/DataBase/conf/DB/init.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/User/DataBase/conf/DB/init.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Logger/log/logger.log" beforeDir="false" afterPath="$PROJECT_DIR$/Logger/log/logger.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Registry/conf/Registry/registry.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/Registry/conf/Registry/registry.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/Document/service/Check.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/service/Check.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/Document/service/Create.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/service/Create.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/Document/service/Delete.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/service/Delete.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/Document/service/Edit.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/service/Edit.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/Document/service/Get.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/service/Get.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/Document/service/Grant.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/service/Grant.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/Document/service/Search.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/service/Search.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/User/service/Alter.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/User/service/Alter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/User/service/LoginAndRegister.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/User/service/LoginAndRegister.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/User/service/PersonalPage.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/User/service/PersonalPage.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.windows-amd64" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Rinai-R&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Rinai-R/Gocument.git&quot;,
    &quot;accountId&quot;: &quot;61d5a169-71ef-4d7d-af66-3b0737a09887&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2rtWreHVUtoB6It5Xdi7G6ikRCZ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
    &quot;Go 构建.go build github.com/Rinai-R/Gocument/Server/Document.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build github.com/Rinai-R/Gocument/Server/User.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build init.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build main.go (1).executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build main.go (2).executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build main.go.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;D:/New/project/Gocument/Server/Document&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;run.configurations.included.in.services&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.IDE.editor.colors.用户定义的文件类型&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;mysql&quot;,
      &quot;redis&quot;,
      &quot;mongo&quot;
    ]
  }
}</component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\New\project\Gocument\Server\Document" />
      <recent name="D:\New\project\Gocument\Server\User" />
      <recent name="D:\New\project\Gocument\Gocument\Server\Document" />
      <recent name="D:\New\project\Gocument\Gocument\Server\User" />
      <recent name="D:\New\project\Gocument\Gocument\Server" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="D:\New\project\Gocument\Server\Document\DataBase" />
      <recent name="D:\New\project\Gocument\Server\User\DataBase" />
      <recent name="D:\New\project\Gocument\Server\User" />
      <recent name="D:\New\project\Gocument\DataBase\DB\ElasticSearch" />
      <recent name="D:\New\project\Gocument\Utils\Sensitive" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="GoApplicationRunConfiguration" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Go 构建.go build main.go">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="Gocument" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/Rinai-R/Gocument/Server/Document" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Gocument" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/Rinai-R/Gocument/Server/Document" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/Server/Document/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Gocument" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/Server/User/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="Gocument" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/App/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="Gocument" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go 构建.go build main.go" />
      <item itemvalue="Go 构建.go build main.go (1)" />
      <item itemvalue="Go 构建.go build github.com/Rinai-R/Gocument/Server/Document" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build main.go (1)" />
        <item itemvalue="Go 构建.go build github.com/Rinai-R/Gocument/Server/Document" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-d297c17c1fbd-d82d926f19eb-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-243.22562.186" />
        <option value="bundled-js-predefined-d6986cc7102b-deb605915726-JavaScript-GO-243.22562.186" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>