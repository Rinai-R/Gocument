<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="c6054028-f375-43b9-9c07-5d269562e655" name="更改" comment="非对称加密token完结撒花，注册中心改用etcd，同时docker-compose一键启动支持！">
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.local.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.local.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/dataSources.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/dataSources/bee7392f-b0a3-4b82-abde-1a5ebe66e547.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/inspectionProfiles/Project_Default.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/Auth/Initialize/Registry.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Auth/Initialize/Registry.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/Document/DataBase/conf/DB/db.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/DataBase/conf/DB/db.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/Document/Registry/Registry.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/Document/Registry/Registry.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/User/DataBase/conf/DB/db.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/Server/User/DataBase/conf/DB/db.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Server/User/Registry/Registry.go" beforeDir="false" afterPath="$PROJECT_DIR$/Server/User/Registry/Registry.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pkg/Logger/log/logger.log" beforeDir="false" afterPath="$PROJECT_DIR$/pkg/Logger/log/logger.log" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="HTML File" />
        <option value="JavaScript File" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file://$USER_HOME$/go/pkg/mod/golang.org/toolchain@v0.0.1-go1.23.2.windows-amd64" />
  <component name="Git.Settings">
    <option name="PUSH_TAGS">
      <GitPushTagMode>
        <option name="argument" value="--tags" />
        <option name="title" value="All" />
      </GitPushTagMode>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Rinai-R&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Rinai-R/Gocument.git&quot;,
    &quot;accountId&quot;: &quot;61d5a169-71ef-4d7d-af66-3b0737a09887&quot;
  }
}</component>
  <component name="KubernetesApiPersistence">{}</component>
  <component name="KubernetesApiProvider">{
  &quot;isMigrated&quot;: true
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="ProjectErrors" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 7
}</component>
  <component name="ProjectId" id="2rtWreHVUtoB6It5Xdi7G6ikRCZ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;DefaultGoTemplateProperty&quot;: &quot;Go File&quot;,
    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,
    &quot;Go 构建.go build github.com/Rinai-R/Gocument/Server/Auth.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build github.com/Rinai-R/Gocument/Server/Document.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build github.com/Rinai-R/Gocument/Server/User.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build init.go.executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build main.go (1).executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build main.go (2).executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build main.go (3).executor&quot;: &quot;Run&quot;,
    &quot;Go 构建.go build main.go.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.git.unshallow&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.formatter.settings.were.checked&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.migrated.go.modules.settings&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.go.modules.go.list.on.any.changes.was.set&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;go.import.settings.migrated&quot;: &quot;true&quot;,
    &quot;go.sdk.automatically.set&quot;: &quot;true&quot;,
    &quot;last_opened_file_path&quot;: &quot;C:/Users/chenyue/Desktop/PrOJECT/Gocument/Server/Api/Func/Auth/Client&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
    &quot;run.configurations.included.in.services&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.IDE.editor.colors.用户定义的文件类型&quot;
  },
  &quot;keyToStringList&quot;: {
    &quot;DatabaseDriversLRU&quot;: [
      &quot;mysql&quot;,
      &quot;redis&quot;,
      &quot;mongo&quot;,
      &quot;elasticsearch&quot;
    ]
  }
}</component>
  <component name="RdControllerToolWindowsLayoutState" isNewUi="true">
    <layout>
      <window_info id="Bookmarks" side_tool="true" />
      <window_info id="Merge Requests" />
      <window_info id="Commit_Guest" show_stripe_button="false" />
      <window_info id="Pull Requests" />
      <window_info id="Learn" />
      <window_info active="true" content_ui="combo" id="Project" order="0" sideWeight="0.7418525" visible="true" weight="0.23739192" />
      <window_info id="Commit" order="1" weight="0.23703936" />
      <window_info id="Structure" order="2" sideWeight="0.25814754" side_tool="true" weight="0.23703936" />
      <window_info anchor="bottom" id="Database Changes" />
      <window_info anchor="bottom" id="TypeScript" />
      <window_info anchor="bottom" id="TODO" />
      <window_info anchor="bottom" id="File Transfer" />
      <window_info anchor="bottom" id="Version Control" order="0" weight="0.3132214" />
      <window_info anchor="bottom" id="Problems" order="1" />
      <window_info anchor="bottom" id="Problems View" order="2" weight="0.33001047" />
      <window_info anchor="bottom" id="Terminal" order="3" weight="0.3132214" />
      <window_info anchor="bottom" id="Services" order="4" weight="0.3132214" />
      <window_info anchor="right" id="Endpoints" />
      <window_info anchor="right" id="make" side_tool="true" />
      <window_info anchor="right" id="Coverage" side_tool="true" />
      <window_info anchor="right" content_ui="combo" id="Notifications" order="0" weight="0.25" />
      <window_info anchor="right" id="AIAssistant" order="1" weight="0.25" />
      <window_info anchor="right" id="Database" order="2" weight="0.3301062" />
      <window_info anchor="right" id="Gradle" order="3" weight="0.25" />
      <window_info anchor="right" id="Maven" order="4" weight="0.25" />
    </layout>
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\chenyue\Desktop\PrOJECT\Gocument\Server\Api\Func\Auth\Client" />
      <recent name="C:\Users\chenyue\Desktop\PrOJECT\Gocument\Server\Auth\rpc" />
      <recent name="C:\Users\chenyue\Desktop\PrOJECT\Gocument\Server\Auth" />
      <recent name="C:\Users\chenyue\Desktop\PrOJECT\Gocument\Server\Document" />
      <recent name="C:\Users\chenyue\Desktop\PrOJECT\Gocument\Server\Api\registry" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\chenyue\Desktop\PrOJECT\Gocument\Server\Auth\Initialize" />
      <recent name="C:\Users\chenyue\Desktop\PrOJECT\Gocument\pkg" />
      <recent name="C:\Users\chenyue\Desktop\PrOJECT\Gocument\Server\Auth" />
      <recent name="C:\Users\chenyue\Desktop\PrOJECT\Gocument\Server" />
      <recent name="D:\New\project\Gocument\Server\Document\DataBase" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="GoApplicationRunConfiguration" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Go 构建.go build main.go (3)">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="Gocument" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration name="go build github.com/Rinai-R/Gocument/Server/Auth" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Gocument" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/Rinai-R/Gocument/Server/Auth" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/Server/Auth/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (1)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Gocument" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/Server/User/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (2)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Gocument" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/Server/Document/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go (3)" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="Gocument" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/Server/Api/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="go build main.go" type="GoApplicationRunConfiguration" factoryName="Go Application" nameIsGenerated="true">
      <module name="Gocument" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/App/main.go" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="Gocument" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Go 构建.go build main.go" />
      <item itemvalue="Go 构建.go build github.com/Rinai-R/Gocument/Server/Auth" />
      <item itemvalue="Go 构建.go build main.go (1)" />
      <item itemvalue="Go 构建.go build main.go (2)" />
      <item itemvalue="Go 构建.go build main.go (3)" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Go 构建.go build main.go (3)" />
        <item itemvalue="Go 构建.go build github.com/Rinai-R/Gocument/Server/Auth" />
        <item itemvalue="Go 构建.go build main.go (1)" />
        <item itemvalue="Go 构建.go build main.go (2)" />
      </list>
    </recent_temporary>
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-gosdk-d297c17c1fbd-57c114c3cede-org.jetbrains.plugins.go.sharedIndexes.bundled-GO-243.25659.52" />
        <option value="bundled-js-predefined-d6986cc7102b-1632447f56bf-JavaScript-GO-243.25659.52" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="默认任务">
      <changelist id="c6054028-f375-43b9-9c07-5d269562e655" name="更改" comment="" />
      <created>1738146770050</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1738146770050</updated>
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="FILTERS">
                <map>
                  <entry key="branch">
                    <value>
                      <list>
                        <option value="main" />
                      </list>
                    </value>
                  </entry>
                </map>
              </option>
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="运行在虚拟机上面了" />
    <MESSAGE value="添加一些注释" />
    <MESSAGE value="使用非对称加密，新增Auth服务" />
    <MESSAGE value="非对称加密token完结撒花，注册中心改用etcd，同时docker-compose一键启动支持！" />
    <option name="LAST_COMMIT_MESSAGE" value="非对称加密token完结撒花，注册中心改用etcd，同时docker-compose一键启动支持！" />
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
</project>